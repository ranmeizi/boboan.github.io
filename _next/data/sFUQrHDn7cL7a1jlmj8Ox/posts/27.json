{"pageProps":{"postData":{"id":"27","title":"taro3.x小程序插件分包的坑","tags":["taro","webpack","小程序插件"],"date":"2022-09-05","image":"/boboan.github.io/posts/27/1.png","abstract":"最近有个业务要开发多个小程序，我们选择了用微信小程序插件的形式复用，react技术栈就选择了taro。不过开始就遇到了当头一棒，在打包时发现，2个页面引用同一个组件时，样式会丢失，天哪这还咋开发。","contentHtml":"<h2>起因</h2>\n<p>最近有个业务要开发多个小程序，我们选择了用微信小程序插件的形式复用，react技术栈就选择了taro。不过开始就遇到了当头一棒，在打包时发现，2个页面引用同一个组件时，样式会丢失，天哪这还咋开发。<br>\n上github上搜了一下果然有人遇到了相同的问题</p>\n<h2>css 分包</h2>\n<p>https://github.com/NervJS/taro/issues/8168<br>\n<img src=\"/boboan.github.io/posts/27/1.png\"><br>\n感觉2个page引用同一个组件，应该是触发了taro打包的分包策略，css被打到common.wxss里了\n然后taro 自己在小程序打包时，用app组件的wxss引用了common.wxss</p>\n<p>可是。。plugin没有app组件呀。。。</p>\n<h2>要是能让plugin/page中的wxss引用common.wxss就好了</h2>\n<p><img src=\"/boboan.github.io/posts/27/2.png\"></p>\n<p>说干就干，只需要在每个wxss的第一行添加对common.wxss的引用就好了。</p>\n<p>写个webpack plugin，我们在emit时，修改一下asset的source，把首行给他添加进去</p>\n<pre><code class=\"language-javascript\">const { ConcatSource } = require('webpack-sources')\nconst Regexp = /(?&#x3C;=plugin\\/(components|pages))\\/.+\\.wxss/g\n\nclass WxssImportPlugin {\n  apply(compiler) {\n    console.log('轮到我了》')\n    compiler.hooks.emit.tapAsync(\n      'WxssImportPlugin',\n      (compilation, callback) => {\n        // Do something async...\n        // 寻找 plugin/page 文件下 的wxss文件\n        for (let [name, assets] of Object.entries(compilation.assets)) {\n          if (Regexp.test(name)) {\n            console.log('是我了', name, assets.source())\n            // 找路径下有几个/\n            const times = name.split('/').length - 2\n            // 创建首行引用语句 @import '../../common.wxss'\n            const firstLine = `@import '${Array(times).fill('../').join('') + 'common.wxss'}';\\n`\n            compilation.assets[name] = new ConcatSource(firstLine + assets.source())\n          }\n        }\n\n        callback()\n      }\n    );\n  }\n}\n\nmodule.exports = WxssImportPlugin\n</code></pre>\n<p>把新写的plugin添加到webpack配置里</p>\n<pre><code class=\"language-javascript\"># config/index.js\nmini: {\n    ...\n    webpackChain(chain, webpack) {\n      chain.plugin('WxssImportPlugin').use(WxssImportPlugin)\n    }\n}\n</code></pre>\n"},"allTags":["nextjs","remark","typescript","taro","webpack","loader","小程序插件","javascript","react","extention","github page","screeps","nodejs","闲的","canvas","promise","vue","Parcel","eggjs","extension"]},"__N_SSG":true}