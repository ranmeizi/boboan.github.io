{"pageProps":{"postData":{"id":"26","title":"计算日期是星期几","tags":["javascript"],"date":"2021-10-27","image":"/boboan.github.io/images/tags/js.jpg","abstract":"蔡勒（Zeller）公式，是一个计算星期的公式，随便给一个日期，就能用这个公式推算出是星期几。","contentHtml":"<h2>蔡勒（Zeller）公式</h2>\n<blockquote>\n<p>蔡勒（Zeller）公式，是一个计算星期的公式，随便给一个日期，就能用这个公式推算出是星期几。</p>\n</blockquote>\n<h2>公式</h2>\n<p>w=y+[y/4]+[c/4]-2c+[26(m+1）/10]+d-1\n注意：</p>\n<ol>\n<li>当年的1,2月要当成上一年的13,14月进行计算</li>\n<li>w小于0时，需要加7的倍数到正数后再取模</li>\n</ol>\n<h2>符号意义</h2>\n<p>w：星期； w对7取模得：0-星期日，1-星期一，2-星期二，3-星期三，4-星期四，5-星期五，6-星期六\nc：世纪（注：一般情况下，在公式中取值为已经过的世纪数，也就是年份除以一百的结果，而非正在进行的世纪，也就是现在常用的年份除以一百加一；不过如果年份是公元前的年份且非整百数的话，c应该等于所在世纪的编号，如公元前253年，是公元前3世纪，c就等于-3）\ny：年（一般情况下是后两位数，如果是公元前的年份且非整百数，y应该等于cMOD100+100）\nm：月（m大于等于3，小于等于14，即在蔡勒公式中，某年的1、2月要看作上一年的13、14月来计算，比如2003年1月1日要看作2002年的13月1日来计算）\nd：日\n[ ]代表取整，即只要整数部分。</p>\n<h2>代码实现</h2>\n<pre><code class=\"language-javascript\">/**\n  * \n  * @param {string} year YYYY\n  * @param {string} month D\n  */\nfunction getWeek(year,month) {\n        const C = year[0] + year[1] - 0\n        const y = year[2] + year[3] - 0\n        const m = month &#x3C; 3 ? month + 12 : month\n        const d = 1\n        // 蔡勒公式\n        const W = f(C / 4) - 2 * C + y + f(y / 4) + f(26 * (m + 1) / 10) + d - 1\n\n        return W\n}\nfunction f(n) {\n    return Math.floor(n)\n}\n</code></pre>\n"},"allTags":["nextjs","remark","typescript","taro","webpack","loader","小程序插件","javascript","react","extention","github page","screeps","nodejs","闲的","canvas","promise","vue","Parcel","eggjs","extension"]},"__N_SSG":true}