{"pageProps":{"postData":{"id":"9","title":"useReducer处理异步action,hooks实现redux-thunk","tags":["react"],"date":"2020-09-15","image":"/boboan.github.io/posts/9/1.png","abstract":"使用 reducer 的时候，有一些异步改变 state 的逻辑不能像 redux-thunk 那样传(dispatch,getState)=>{},dispatch 看不懂，想着把 useReducer 再封一层 thunk 的 hooks","contentHtml":"<p>使用reducer的时候，有一些异步改变state的逻辑不能像redux-thunk那样传(dispatch,getState)=>{},dispatch看不懂，想着把useReducer再封一层thunk的hooks</p>\n<h2>先来看看redux-thunk是怎么做的把</h2>\n<p>找到redux-thunk的包，看源码</p>\n<pre><code class=\"language-javascript\">function createThunkMiddleware(extraArgument) {\n  return ({ dispatch, getState }) => next => action => {\n    if (typeof action === 'function') {\n      return action(dispatch, getState, extraArgument);\n    }\n\n    return next(action);\n  };\n}\n\nconst thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\n\nexport default thunk;\n</code></pre>\n<p>是让他可以传入一个(dispatch,getState)=>{}这样的function,给这个function dispatch和getState的能力，这两个也是个function，那只要我们再hooks实现:</p>\n<ol>\n<li>判断function</li>\n<li>传递dispatch</li>\n<li>获取当前state，就能用了</li>\n</ol>\n<h2>抄一下吧</h2>\n<pre><code class=\"language-javascript\">import { useReducer, useRef, useEffect } from 'react'\n\nexport function useThunkReducer(reducer, initialState) {\n    const [state, dispatch] = useReducer(reducer, initialState)\n    const stateRef = useRef(state)\n    useEffect(() => {\n        stateRef.current = state\n    }, [state])\n    const getState = () => {\n        return { ...stateRef.current }\n    }\n    const thunkDispatch = action => {\n        typeof action === 'function'\n            ? action(thunkDispatch , getState) // action(dispatch, getState) 写错了。。。这里应该用thunkDispatch处理，因为之后也可能是个funciton\n            : dispatch(action)\n    }\n    return [state, thunkDispatch]\n}\n</code></pre>\n<ol>\n<li>判断function的逻辑就直接抄了redux-thunk的if</li>\n<li>dispatch用的是官方useReducer返回的dispatch</li>\n<li>getState 不太好弄，我用useRef和useEffect再在每次state变化时又存了个副本，让function返回stateRef</li>\n</ol>\n"},"allTags":["nextjs","remark","typescript","taro","webpack","loader","小程序插件","javascript","react","extention","github page","screeps","nodejs","闲的","canvas","promise","vue","Parcel","eggjs","extension"]},"__N_SSG":true}